#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#define AS(keycode) &as LS(keycode) keycode     // Autoshift Macro
#define COMBOMS 25
#define HOLDTAP 165 // Old Value 150
#define MACRO_WAIT_TIME 50





/ {
        //-------------Accents Italian-------------
        //MACROS
        macros {
                it_egrav: it_egrav {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings
                                = <&kp LC(LA(LG(I)))>,
                                <&macro_wait_time MACRO_WAIT_TIME>,
                                <&kp LBKT>,
                                <&macro_wait_time MACRO_WAIT_TIME>,
                                <&kp LC(LA(LG(E)))>;
                };
                it_shift_egrav: it_shift_egrav {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings
                                = <&kp LC(LA(LG(I)))>,
                                <&macro_wait_time MACRO_WAIT_TIME>,
                                <&kp LS(LBKT)>,
                                <&macro_wait_time MACRO_WAIT_TIME>,
                                <&kp LC(LA(LG(E)))>;
                };
                it_i: it_i {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings
                                = <&kp LC(LA(LG(I)))>,
                                <&macro_wait_time MACRO_WAIT_TIME>,
                                <&kp EQUAL>,
                                <&macro_wait_time MACRO_WAIT_TIME>,
                                <&kp LC(LA(LG(E)))>;
                };
                it_o: it_o {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings
                                = <&kp LC(LA(LG(I)))>,
                                <&macro_wait_time MACRO_WAIT_TIME>,
                                <&kp SEMI>, 
                                <&macro_wait_time MACRO_WAIT_TIME>,
                                <&kp LC(LA(LG(E)))>;
                };
                it_u: it_u {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings
                                = <&kp LC(LA(LG(I)))>,
                                <&macro_wait_time MACRO_WAIT_TIME>,
                                <&kp BSLH>,
                                <&macro_wait_time MACRO_WAIT_TIME>,
                                <&kp LC(LA(LG(E)))>;
                };
                it_a: it_a {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings 
                                = <&kp LC(LA(LG(I)))>,
                                <&macro_wait_time 50>,
                                <&kp SQT>,
                                <&macro_wait_time 50>,
                                <&kp LC(LA(LG(E)))>;
                };

                      // TEMP  
                macro_1: macro_1 {
                compatible = "zmk,behavior-macro";
                label = "Macro 1";
                #binding-cells = <0>;  // Indicates no extra parameters are needed
                bindings = <&macro_press &kp H>, <&macro_press &kp E>, <&macro_press &kp L>,
                        <&macro_press &kp L>, <&macro_press &kp O>, <&macro_release>;
                };

                // Define Macro 2
                macro_2: macro_2 {
                compatible = "zmk,behavior-macro";
                label = "Macro 2";
                #binding-cells = <0>;  // Indicates no extra parameters are needed
                bindings = <&macro_press &kp W>, <&macro_press &kp O>, <&macro_press &kp R>,
                        <&macro_press &kp L>, <&macro_press &kp D>, <&macro_release>;
                };

                // Define Macro 3
                macro_3: macro_3 {
                compatible = "zmk,behavior-macro";
                label = "Macro 3";
                #binding-cells = <0>;  // Indicates no extra parameters are needed
                bindings = <&macro_press &kp Z>, <&macro_press &kp M>, <&macro_press &kp K>, <&macro_release>;
                };
                //----
        };
        //COMBOS
        combos {
                compatible = "zmk,combos";
                //Left CMD - ST
                combo_lcmd {
                        timeout-ms = <COMBOMS>;
                        key-positions = <15 16>;
                        bindings = <&kp LCMD>;
                };
                //Right CMD - NE
                combo_rcmd {
                        timeout-ms = <COMBOMS>;
                        key-positions = <19 20>;
                        bindings = <&kp RCMD>;
                };
                //Left ALT - RS
                combo_lalt {
                        timeout-ms = <COMBOMS>;
                        key-positions = <14 15>;
                        bindings = <&kp LALT>;
                };
                //Right ALT - EI
                combo_ralt {
                        timeout-ms = <COMBOMS>;
                        key-positions = <20 21>;
                        bindings = <&kp RALT>;
                };
                //Left CTRL - AR
                combo_lctrl {
                        timeout-ms = <COMBOMS>;
                        key-positions = <14 15 16>;
                        bindings = <&kp LCTRL>;
                };
                //Right CTRL - IO
                combo_rctrl {
                        timeout-ms = <COMBOMS>;
                        key-positions = <19 20 21>;
                        bindings = <&kp RCTRL>;
                };
                //Escape - WF
                combo_esc {
                        timeout-ms = <COMBOMS>;
                        key-positions = <2 3>;
                        bindings = <&kp ESC>;
                };
                //Combo - Del
                combo_del {
                        timeout-ms= <50>;
                        key-positions = <3 4>; 
                        bindings = <&kp DEL>;
                };
        };

        //BEHAIVORS TEMP
        behaviors {
                // Define Hold-Tap Behavior
                hold_tap_macro: hold_tap_macro {
                        compatible = "zmk,behavior-hold-tap";
                        label = "Hold Tap Macro";
                        #binding-cells = <2>;  // Two bindings: tap and hold actions
                        bindings = <&macro_1>, <&macro_2>; // Tap = macro_1, Hold = macro_2
                        tapping-term-ms = <200>;           // Tap/hold detection threshold
                        quick-tap-ms = <150>;              // Quick tap detection threshold
                };


                // BackSpace HOLD Tap
                ht: ht {
                        compatible = "zmk,behavior-hold-tap";
                        bindings = <&kp>, <&kp>;
                        #binding-cells = <2>;
                        tapping-term-ms = <145>;    
                        quick-tap-ms = <0>;
                        require-prior-idle-ms = <140>; //initial value 140
                        flavor = "balanced";
                };
        // IT_E Hold Tap
                it_e: it_e {
                        compatible = "zmk,behavior-hold-tap";
                        #binding-cells = <2>;
                        tapping-term-ms = <HOLDTAP>;
                        quick-tap-ms = <50>; // 50 I think is the sweet Spot for this settings
                        require-prior-idle-ms = <50>; // 50 I think this is the sweet spot for this settings
                        flavor = "balanced";
                        bindings = <&it_shift_egrav>, <&it_egrav>;
                };
        // Autoshift Hold Tap
                as: auto_shift {
                        compatible = "zmk,behavior-hold-tap";
                        label = "ZM_autoshift";
                        #binding-cells = <2>;
                        tapping-term-ms = <HOLDTAP>; //prev was 140
                        quick-tap-ms = <50>; // 50 I think is the sweet Spot for this settings
                        require-prior-idle-ms = <50>; // 50 I think this is the sweet spot for this settings
                        flavor = "balanced";
                        bindings = <&kp &kp>;
                };
        // Capture Screen Key TAP Dance
                mk_capt: tap_dance_mod_tap {
                        compatible = "zmk,behavior-tap-dance";
                        #binding-cells = <0>;
                        tapping-term-ms = <HOLDTAP>; //old 200
                        bindings = <&mt LG(LC(LS(N4)))  LG(LS(N2))>, <&mt LG(LS(N5))  LG(LS(N4))>;
                };
        // Double Tap for Layer 4 and HT CMD and Tap Enter
                tap_layer4:tap_layer4 {
                        compatible = "zmk,behavior-tap-dance";
                        #binding-cells = <0>;
                        tapping-term-ms = <HOLDTAP>;
                        bindings = <&ht RCMD RET>, <&mo 4>;
                };
        };

        keymap {
                compatible = "zmk,keymap";

//Layer 0 - Default
                default_layer {
        // -------------------------------------------------------------------------------------------------
        // |  TAB      |  Q  |  W  |  E  |  R  |  T  |                      |  Y  |  U   |  I  |  O  |  P  |   \  |
        // | Bakcspace |  A  |  S  |  D  |  F  |  G  |                      |  H  |  J   |  K  |  L  |  ;  |   '  |
        // | SHFT      |  Z  |  X  |  C  |  V  |  B  |  None|     |  MUTE   |  N  |  M   |  ,  |  .  |  /  | SHFT |
        //    4-WinMan+emojy  | 1-Numbers/Space | CMD/Enter |  | CMD/Enter | 2-Arrows  | 3-Italian Accents |
        //                                              Vol+    Vol-
                bindings = <
        AS(TAB)                     AS(Q) AS(W) AS(F) AS(P) AS(G)                   AS(J) AS(L)  AS(U)     AS(Y)   AS(SEMI)  AS(BSLH)
        &ht LA(BACKSPACE) BACKSPACE AS(A) AS(R) AS(S) AS(T) AS(D)                   AS(H) AS(N)  AS(E)     AS(I)   AS(O)     AS(SQT)
        &kp LSHFT                   AS(Z) AS(X) AS(C) AS(V) AS(B) &none  &kp C_MUTE AS(K) AS(M)  AS(COMMA) AS(DOT) AS(SLASH) &kp RSHFT
                                &mo 3   &lt 1 SPACE  &ht LCMD RET                          &tap_layer4   &lt 2 SPACE   &kp SPACE
                        >;
                        sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
                };

//Layer 1 Numbers____________________________________________________________________________________________________________________________________
                numbers_layer {

                        bindings = <
        &trans       AS(LBKT)    AS(RBKT)    &kp LPAR   &kp RPAR  &mk_capt                               &trans     &trans     &trans   &trans   &trans     &kp CAPS
        &trans       AS(N1)      AS(N2)      AS(N3)     AS(N4)    AS(N5)                                 AS(N6)     AS(N7)     AS(N8)   AS(N9)   AS(N0)     AS(EQUAL)
        &trans       &trans      &kp LBKT    &kp RBKT   &kp LPAR  &kp LA(LS(O))   &none    &bootloader   &kp PLUS   AS(MINUS)  &trans   &trans   &trans     AS(GRAVE)  
                                                &trans  &trans &trans                        &trans  &trans  &trans
                        >;
                        sensor-bindings = <&inc_dec_kp C_BRI_INC C_BRI_DEC>;
                };

//Layer 2________________________________________________________________________________________________________________________________________________
                arrows_layer {

                        bindings = <
        &trans &kp EXCL &kp AT &kp HASH &kp DLLR  &trans                       &kp DEL      &kp LA(LEFT)  &kp UP   &kp LA(RIGHT)  &kp PG_UP  &kp LG(LS(RBKT))
        &trans &trans   &trans &trans   &trans    &trans                       &kp LG(UP)   &kp LEFT      &kp DOWN &kp RIGHT      &kp PG_DN  &kp LG(LA(SQT))
        &trans &trans   &trans &trans   &trans    &trans    &none  &kp LG(A)   &kp LG(DOWN) &kp LG(LEFT)  &kp LBRC &kp LG(RIGHT)  &kp HOME   &kp LA(LC(SPACE))
                                &kp LGUI  &trans   &kp SPACE                &kp RET   &trans    &kp LALT
                        >;
                        sensor-bindings = <&inc_dec_kp UP DOWN>;
                };

//Layer 3________________________________________________________________________________________________________________________________________________
                bt_layer {

                        bindings = <
        &kp F1        &kp F2        &kp F3        &kp F4        &kp F5        &kp F6                           &kp F7     &kp F8   &kp F9   &kp F10    &kp F11  &kp F12
        &bt BT_CLR    &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                     &kp LEFT   &kp DOWN &kp UP   &kp RIGHT  &trans   &kp F12
        &bootloader   &kp F1        &kp F2        &kp F3        &kp F4        &kp F5     &none &bootloader     &kp F6     &kp F7   &kp F8   &kp F9     &kp F10  &kp F11
                                        &kp LGUI     &trans       &kp SPACE                            &kp RET  &trans   &kp LALT
                        >;
                        sensor-bindings = <&inc_dec_kp LEFT RIGHT>;
                };

//Layer 4 Italian Accents_______________________________________________________________________________________________________________________________________
                it_layer {
        bindings = <
        &trans   &trans   &trans   &trans   &trans   &trans                         &trans   &trans            &it_u              &trans     &trans    &trans
        &trans   &it_a    &trans   &trans   &trans   &trans                         &trans   &it_shift_egrav   &hold_tap_macro    &macro_3   &it_o     &trans
        &trans   &trans   &trans   &trans   &trans   &trans        &trans &trans    &trans   &trans            &trans             &trans     &trans    &trans
                                        &trans   &trans   &trans               &trans   &trans   &trans
                                >;
                        sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
                };

        // &trans   &trans   &trans   &trans   &trans   &trans                          &trans   &trans   &trans   &trans   &trans   &trans
        // &trans   &trans   &trans   &trans   &trans   &trans                          &trans   &trans   &trans   &trans   &trans   &trans
        // &trans   &trans   &trans   &trans   &trans   &trans   &none &bootloader      &trans   &trans   &trans   &trans   &trans   &trans
        //                                 &trans   &trans   &trans                                 &trans   &trans   &trans   
//  

        };
};