#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#define AS(keycode) &as LS(keycode) keycode     // Autoshift Macro
#define COMBOMS 25
#define HOLDTAP 165

/ {
        combos {
                compatible = "zmk,combos";
                //Left CMD - ST
                combo_lcmd {
                        timeout-ms = <COMBOMS>;
                        key-positions = <15 16>;
                        bindings = <&kp LCMD>;
                };
                //Right CMD - NE
                combo_rcmd {
                        timeout-ms = <COMBOMS>;
                        key-positions = <19 20>;
                        bindings = <&kp RCMD>;
                };
                //Left ALT - RS
                combo_lalt {
                        timeout-ms = <COMBOMS>;
                        key-positions = <14 15>;
                        bindings = <&kp LALT>;
                };
                //Right ALT - EI
                combo_ralt {
                        timeout-ms = <COMBOMS>;
                        key-positions = <20 21>;
                        bindings = <&kp RALT>;
                };
                //Left CTRL - AR
                combo_lctrl {
                        timeout-ms = <COMBOMS>;
                        key-positions = <14 15 16>;
                        bindings = <&kp LCTRL>;
                };
                //Right CTRL - IO
                combo_rctrl {
                        timeout-ms = <COMBOMS>;
                        key-positions = <19 20 21>;
                        bindings = <&kp RCTRL>;
                };
                //Escape - WF
                combo_esc {
                        timeout-ms = <COMBOMS>;
                        key-positions = <2 3>;
                        bindings = <&kp ESC>;
                };
                
        };

        // BackSpace HOLD Tap
        behaviors {
                ht: ht {
                        compatible = "zmk,behavior-hold-tap";
                        bindings = <&kp>, <&kp>;
                        #binding-cells = <2>;
                        tapping-term-ms = <HOLDTAP>;
                };
        };

        // Autoshift Hold Tap
        behaviors {
                as: auto_shift {
                        compatible = "zmk,behavior-hold-tap";
                        label = "ZM_autoshift";
                        #binding-cells = <2>;
                        tapping-term-ms = <165>;
                        quick-tap-ms = <0>;
                        require-prior-idle-ms = <165>; //initial value 130
                        flavor = "balanced";
                        bindings = <&kp &kp>;
                };
        };            

        // Capture Screen Key TAP Dance
        behaviors {
                mk_capt: tap_dance_mod_tap {
                        compatible = "zmk,behavior-tap-dance";
                        #binding-cells = <0>;
                        tapping-term-ms = <200>; //old 165
                        bindings = <&mt LG(LC(LS(N4)))  LG(LS(N2))>, <&mt LG(LS(N5))  LG(LS(N4))>;
                };   
        };
        // Test Layer Key TAP Dance
        // behaviors {
        //         lt1_lt3_ret: tap_dance_mod_tap {
        //                 compatible = "zmk,behavior-tap-dance";
        //                 #binding-cells = <0>;
        //                 tapping-term-ms = <200>; //old 165
        //                 bindings = <&lt 1 RET>, <&mo 3>;
        //         };   
        // };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -------------------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |                    |  Y  |  U   |  I  |  O  |  P  | BKSP |
// | CTRL |  A  |  S  |  D  |  F  |  G  |                    |  H  |  J   |  K  |  L  |  ;  |  '   |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |      |  |   MUTE   |  N  |  M   |  ,  |  .  |  /  | ESC  |
//                    | GUI | LWR | SPC |                    | ENT | RSE  | ALT |
//Layer 0
                        bindings = <
   AS(TAB)                     AS(Q) AS(W) AS(F) AS(P) AS(G)                   AS(J) AS(L)  AS(U)     AS(Y)   AS(SEMI)  AS(BSLH)
   &ht LA(BACKSPACE) BACKSPACE AS(A) AS(R) AS(S) AS(T) AS(D)                   AS(H) AS(N)  AS(E)     AS(I)   AS(O)     AS(SQT)
   &kp LSHFT                   AS(Z) AS(X) AS(C) AS(V) AS(B) &none  &kp C_MUTE AS(K) AS(M)  AS(COMMA) AS(DOT) AS(SLASH) &kp RSHFT
                              &mo 3   &lt 1 SPACE  &ht LCMD RET                          &ht RCMD RET   &lt 2 SPACE   &mo 4
                        >;
                        sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
                };

//Layer 1 Numbers____________________________________________________________________________________________________________________________________
                numbers_layer {
// ------------------------------------------------------------------------------------------------
// |  TAB |  1  |  2  |  3  |  4  |  5  |                    |  6  |  7  |  8  |  9  |  0  | BKSP |
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |                    | LFT | DWN |  UP | RGT |     |  F12 |
// | SHFT | F1  | F2  | F3  | F4  | F5  |  boot  |  |        |  F6 | F7  | F8  | F9  | F10 |  F11 |
//                    | GUI |     | SPC |                    | ENT |     | ALT |

                       bindings = <
        &trans         AS(LBKT)        AS(RBKT)       &kp LPAR  &kp RPAR  &mk_capt                                &trans     &trans     &trans   &trans   &trans     &trans 
        &trans         AS(N1)          AS(N2)         AS(N3)    AS(N4)    AS(N5)                                  AS(N6)     AS(N7)     AS(N8)   AS(N9)   AS(N0)     AS(EQUAL)
        &bootloader    &trans          &kp LBKT       &kp RBKT  &kp LPAR  &kp LA(LS(N0))   &none    &bootloader   &kp PLUS   AS(MINUS)  &kp ESC  &kp DEL  AS(GRAVE)  &kp CAPS
                                                &trans &trans &trans                        &trans  &trans  &trans
                        >;
                        sensor-bindings = <&inc_dec_kp RIGHT LEFT>;
                };

//Layer 2________________________________________________________________________________________________________________________________________________
                arrows_layer {
// ------------------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $  |  %  |                    |  ^  |  &  |  *  |  (  |  )  | BKSP |
// | CTRL |     |     |     |     |     |                    |  -  |  =  |  [  |  ]  |  \  |  `   |
// | SHFT |     |     |     |     |     |        |  |  boot  |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    | GUI |     | SPC |                    | ENT |     | ALT |

                        bindings = <
        &trans &kp EXCL &kp AT &kp HASH &kp DLLR  &trans                     &trans       &kp LA(LEFT)  &kp UP   &kp LA(RIGHT)  &kp PG_UP  &kp LG(LS(RBKT))
        &trans &trans   &trans &trans   &trans    &trans                       &kp LG(UP)   &kp LEFT      &kp DOWN &kp RIGHT      &kp PG_DN  &kp LG(LA(SQT))
        &trans &trans   &trans &trans   &trans    &trans    &none  &kp LG(A)   &kp LG(DOWN) &kp LG(LEFT)  &kp LBRC &kp LG(RIGHT)  &kp HOME   &kp LA(LC(SPACE))
                        &kp LGUI &trans   &kp SPACE                    &kp RET   &trans    &kp LALT
                        >;
                        sensor-bindings = <&inc_dec_kp UP DOWN>;
                };

//________________________________________________________________________________________________________________________________________________

//Layer 3________________________________________________________________________________________________________________________________________________
                bt_layer {
// ------------------------------------------------------------------------------------------------
// |  TAB |  1  |  2  |  3  |  4  |  5  |                    |  6  |  7  |  8  |  9  |  0  | BKSP |
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |                    | LFT | DWN |  UP | RGT |     |  F12 |
// | SHFT | F1  | F2  | F3  | F4  | F5  |  boot  |  |        |  F6 | F7  | F8  | F9  | F10 |  F11 |
//                    | GUI |     | SPC |                    | ENT |     | ALT |

                        bindings = <
        &kp F1      &kp F2        &kp F3        &kp F4        &kp F5        &kp F6                           &kp F7     &kp F8   &kp F9   &kp F10    &kp F11  &kp F12
        &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                     &kp LEFT   &kp DOWN &kp UP   &kp RIGHT  &trans   &kp F12
        &kp LSHFT   &kp F1        &kp F2        &kp F3        &kp F4        &kp F5     &none &bootloader     &kp F6     &kp F7   &kp F8   &kp F9     &kp F10  &kp F11
                                        &kp LGUI     &trans       &kp SPACE                            &kp RET  &trans   &kp LALT
                        >;
                        sensor-bindings = <&inc_dec_kp LEFT RIGHT>;
                };

        };
};